version: '3.7'
services:
  database:
    build:
      context: ./
      dockerfile: postgres.Dockerfile
    ports:
      - "5432:5432"
    tty: true
    restart: unless-stopped
    environment:
      - POSTGRES_DB=database
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SERVER_POSTGRES_PASSWORD=${SERVER_POSTGRES_PASSWORD}
    volumes:
      - /postgres-data:/var/lib/postgresql/data
    command: postgres -c 'max_wal_size=2GB'

  api:
    build:
      context: ./
      dockerfile: micro-chimp.Dockerfile
    depends_on:
      - database
    ports:
      - "5050:5050"
    tty: true
    restart: unless-stopped
    environment:
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - SERVER_POSTGRES_PASSWORD=${SERVER_POSTGRES_PASSWORD}

  nginx:
    build:
      context: ./
      dockerfile: nginx.Dockerfile
    depends_on:
      - api
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
