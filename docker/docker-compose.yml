version: '3.1'
services:
  database:
    build:
      context: ./
      dockerfile: postgres.Dockerfile
      args:
        SITE_NAMES_FILE: site_names.yml
    ports:
      - "5432:5432"
    tty: true
    restart: unless-stopped
    environment:
      - POSTGRES_DB=database
      - POSTGRES_USER_FILE=/run/secrets/admin_postgres_user_file
      - POSTGRES_PASSWORD_FILE=/run/secrets/admin_postgres_password_file
    volumes:
      - /postgres-data:/var/lib/postgresql/data
    command: postgres -c 'max_wal_size=2GB'
    secrets:
      - admin_postgres_user_file
      - admin_postgres_password_file
      - server_postgres_password_file

  api:
    build:
      context: ./
      dockerfile: micro-chimp.Dockerfile
      args:
        SITE_NAMES_FILE: site_names.yml
    depends_on:
      - database
    ports:
      - "5050:5050"
    tty: true
    restart: unless-stopped
    environment:
      - MAILGUN_AUTH_FILE=/run/secrets/mailgun_auth_file
      - POSTGRES_PASSWORD_FILE=/run/secrets/server_postgres_password_file
    secrets:
      - mailgun_auth_file
      - server_postgres_password_file

  nginx:
    build:
      context: ./
      dockerfile: nginx.Dockerfile
      arg:
        SITE_NAMES_FILE: site_names.yml
    # image: nginx:stable-alpine
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


secrets:
  mailgun_auth_file:
    file: .secret.mailgun_auth_file
  admin_postgres_user_file:
    file: .secret.admin_postgres_user_file
  admin_postgres_password_file:
    file: .secret.admin_postgres_password_file
  server_postgres_password_file:
    file: .secret.server_postgres_password_file
